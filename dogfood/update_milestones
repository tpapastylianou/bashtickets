#!/bin/bash

# If called without arguments, display usage
if   test "$#" -eq 1 && test "$1" = "--help" || test "$1" = "-h"
then echo "Usage:"
     echo
     echo "1.  $(basename $0) [milestone1 milestone2 ... milestoneN]"
     echo
     echo "    Updates all or specific milestones from tickets"
     echo
     echo "    e.g.:"
     echo "        $(basename $0) 001.milestone   # update milestone 001 only"
     echo "        $(basename $0) 001             # short version of above"
     echo "        $(basename $0) 001 002 003     # update milestones 001 002 and 003 only"
     echo "        $(basename $0)                 # update all milestones"
     echo
     echo "2.  $(basename $0) --help | -h"
     echo
     echo "    Show this usage text"
     echo
     exit
fi

# Process Input Arguments
ARGS=( "$@" )   # Get all positional arguments as a bash array

# Obtain relevant absolute paths
BASHTICKETS_PATH="$( dirname $BASH_SOURCE | xargs realpath )"
TICKETS_PATH="$BASHTICKETS_PATH/tickets"
MILESTONES_PATH="$BASHTICKETS_PATH/milestones"

if   test "${#ARGS[@]}" -eq 0                         # Command was called without inputs
then ARGS=( $MILESTONES_PATH/*.milestone )            # Collect all milestone filenames
     ARGS=( ${ARGS[@]:1} )                            # Remove first element of array
     for  i in $( seq 0 "$(( ${#ARGS[@]} - 1))" )     # loop from index 0 to N-1
     do   ARGS["$i"]="${ARGS[$i]#$MILESTONES_PATH/}"  # Remove path prefix
     done
else
    # Confirm validity of inputs
    ERRORS=0

    for  ARG in "${ARGS[@]}"
    do   if   test "${ARG%.milestone}" = "000"
         then echo "Invalid input (000) as milestone in this context."
              exit 1
         elif test -f "$MILESTONES_PATH/${ARG%.milestone}.milestone"
         then :
         else echo "Input Error: No such milestone (${ARG%.milestone}.milestone) exists in $MILESTONES_PATH"
              ERRORS=$((ERRORS + 1))
         fi
    done

    if test "$ERRORS" -gt 0
    then echo "Encountered $ERRORS input errors. Aborting."
         exit 1
    fi
fi

for ARG in "${ARGS[@]}"
do  MILESTONE_NO="${ARG%.milestone}"   # Remove .milestone suffix
    MILESTONE_FILE="$MILESTONES_PATH/${ARG%.milestone}.milestone"
    HEADER=$(grep --color=never "=== Open Tickets ===" "$MILESTONE_FILE" -n | cut -d: -f1 )

    head -n "+$HEADER" "$MILESTONE_FILE"                                  > "$MILESTONE_FILE.bak"
    echo                                                                 >> "$MILESTONE_FILE.bak"
    "$BASHTICKETS_PATH/show_open_tickets_by_milestone" "$MILESTONE_NO"   >> "$MILESTONE_FILE.bak"
    echo                                                                 >> "$MILESTONE_FILE.bak"
    echo "=== Closed Tickets ==="                                        >> "$MILESTONE_FILE.bak"
    echo                                                                 >> "$MILESTONE_FILE.bak"
    "$BASHTICKETS_PATH/show_closed_tickets_by_milestone" "$MILESTONE_NO" >> "$MILESTONE_FILE.bak"
    mv "$MILESTONE_FILE.bak" "$MILESTONE_FILE"
done
