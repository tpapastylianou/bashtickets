#!/bin/bash

# Note: the 'error' function used here is defined in the main bashtickets script
# and exported here

# Note: no 'valid repo' sanity checks here, since they will have been already
# performed by the main 'bashtickets' executable

# Capture ticket path and template onto the relevant variables
  TICKETS_PATH="$( realpath ./tickets )"
  TICKET_TEMPLATE="$BT_TEMPLATES_DIR/0.ticket"

  cd $TICKETS_PATH

# If this is the first ticket, start numbering from 1; otherwise, find the
# last ticket number, and increment by one.
  if     test "!" "-f" *.ticket
  then   NEW_TICKET=1
  else   LAST_TICKET=$(ls *.ticket | tail -n 1)
         LAST_TICKET=${LAST_TICKET%.ticket}   # parameter expansion: remove '.ticket' suffix
         NEW_TICKET=$(( $LAST_TICKET + 1 ))
  fi

# Create a new ticket from template, discarding anythine below line 13
  head "$TICKET_TEMPLATE" -n +13 > "${NEW_TICKET}.ticket"

# Update ticket number
  sed -i "s/Ticket No.: 0/Ticket No.: ${NEW_TICKET}/" "${NEW_TICKET}.ticket"

# Clean up templated text, comments etc
  sed -i "s/Description: .*/Description: /" "${NEW_TICKET}.ticket"
  sed -i "s/#.*//g"  "${NEW_TICKET}.ticket"   # remove all comments

# Try to set owner and reporter automatically:
  WHOAMI=$(whoami)
  WHOAMI=${WHOAMI^}   # parameter expansion: make first character uppercase
  sed -i "s/Reporter: /Reporter: $WHOAMI/" "${NEW_TICKET}.ticket"
  sed -i "s/Owner:/Owner: $WHOAMI/" "${NEW_TICKET}.ticket"

# Select a valid type:
  echo "Select a valid ticket type:"
  select TICKETTYPE in Investigation Bugfix Feature Task
  do
      sed -i "s/Type: /Type: $TICKETTYPE/" "${NEW_TICKET}.ticket"
      break
  done

# Select a valid priority:
  echo
  echo "Select a valid ticket priority"
  select TICKETPRIORITY in                                                                 \
      "Lowest     (desirable, but not strictly necessary; minimal disruption if not done)" \
      "Normal     (as soon as possible; required, but not urgent or critical)"             \
      "Important  (but can wait)"                                                          \
      "Urgent     (but not of critical importance)"                                        \
      "Highest    (both important and urgent)"
  do
      sed -i "s/Priority: /Priority: ${TICKETPRIORITY%% *}/" "${NEW_TICKET}.ticket"
      break
  done

# Set today's date
  TODAY=$(date +"%Y-%m-%d")
  sed -i "s/Date: /Date: $TODAY/" "${NEW_TICKET}.ticket"

# Declare status as Open
  sed -i "s/Status: /Status: Open/" "${NEW_TICKET}.ticket"

# Open resulting file in vim or nano for further editing, place cursor at Summary
  if   test $EDITOR = "vim"
  then vim '+cal cursor(2,14)' "${NEW_TICKET}.ticket"
  else nano +2,14 "${NEW_TICKET}.ticket"
  fi

# Report successful creation of new ticket, mentioning number.
  echo
  echo "Ticket No. ${NEW_TICKET} created successfully"
  echo
